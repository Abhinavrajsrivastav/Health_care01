{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91991\\\\Desktop\\\\Health_care\\\\src\\\\Components\\\\Services\\\\Quiz\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz(props) {\n  _s();\n  const onClick = () => {\n    props.setShowApp(false);\n  };\n  const questions = [\n    // ... (your questions array remains the same)\n  ];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect === true) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const calculateScore = () => {\n    return `${score} out of ${questions.length}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-section\",\n          children: [\"You scored \", calculateScore()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: onClick,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: currentQuestion < questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Question \", currentQuestion + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), \"/\", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text\",\n              children: questions[currentQuestion].questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: questions[currentQuestion].answerOptions.map((answerOption, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAnswerButtonClick(answerOption.isCorrect),\n              children: answerOption.answerText\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this) : null\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Quiz, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","props","_s","onClick","setShowApp","questions","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerButtonClick","isCorrect","nextQuestion","length","calculateScore","children","className","fileName","_jsxFileName","lineNumber","columnNumber","questionText","answerOptions","map","answerOption","index","answerText","_c","$RefreshReg$"],"sources":["C:/Users/91991/Desktop/Health_care/src/Components/Services/Quiz/Quiz.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Quiz.css';\r\n\r\nfunction Quiz(props) {\r\n  const onClick = () => {\r\n    props.setShowApp(false);\r\n  };\r\n\r\n  const questions = [\r\n    // ... (your questions array remains the same)\r\n  ];\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const handleAnswerButtonClick = (isCorrect) => {\r\n    if (isCorrect === true) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    return `${score} out of ${questions.length}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className='header'>Quiz</h1>\r\n      <div className=\"app\">\r\n        {showScore ? (\r\n          <div>\r\n            <div className='score-section'>\r\n              You scored {calculateScore()}\r\n            </div>\r\n            <button className=\"back-button\" onClick={onClick}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {currentQuestion < questions.length ? (\r\n              <div className=\"question-area\">\r\n                <div className='question-section'>\r\n                  <div className='question-count'>\r\n                    <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n                  </div>\r\n                  <div className='question-text'>\r\n                    {questions[currentQuestion].questionText}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='answer-section'>\r\n                  {questions[currentQuestion].answerOptions.map((answerOption, index) => (\r\n                    <button key={index} onClick={() => handleAnswerButtonClick(answerOption.isCorrect)}>\r\n                      {answerOption.answerText}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpB,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBF,KAAK,CAACG,UAAU,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,SAAS,GAAG;IAChB;EAAA,CACD;EAED,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMiB,uBAAuB,GAAIC,SAAS,IAAK;IAC7C,IAAIA,SAAS,KAAK,IAAI,EAAE;MACtBF,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IAEA,MAAMI,YAAY,GAAGR,eAAe,GAAG,CAAC;IACxC,IAAIQ,YAAY,GAAGT,SAAS,CAACU,MAAM,EAAE;MACnCR,kBAAkB,CAACO,YAAY,CAAC;IAClC,CAAC,MAAM;MACLL,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;EAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAQ,GAAEN,KAAM,WAAUL,SAAS,CAACU,MAAO,EAAC;EAC9C,CAAC;EAED,oBACElB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAIqB,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCzB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAD,QAAA,EACjBT,SAAS,gBACRX,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAKqB,SAAS,EAAC,eAAe;UAAAD,QAAA,GAAC,aAClB,EAACD,cAAc,CAAC,CAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACNzB,OAAA;UAAQqB,SAAS,EAAC,aAAa;UAACf,OAAO,EAAEA,OAAQ;UAAAc,QAAA,EAAC;QAElD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,gBAENzB,OAAA,CAAAE,SAAA;QAAAkB,QAAA,EACGX,eAAe,GAAGD,SAAS,CAACU,MAAM,gBACjClB,OAAA;UAAKqB,SAAS,EAAC,eAAe;UAAAD,QAAA,gBAC5BpB,OAAA;YAAKqB,SAAS,EAAC,kBAAkB;YAAAD,QAAA,gBAC/BpB,OAAA;cAAKqB,SAAS,EAAC,gBAAgB;cAAAD,QAAA,gBAC7BpB,OAAA;gBAAAoB,QAAA,GAAM,WAAS,EAACX,eAAe,GAAG,CAAC;cAAA;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,KAAC,EAACjB,SAAS,CAACU,MAAM;YAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC,eACNzB,OAAA;cAAKqB,SAAS,EAAC,eAAe;cAAAD,QAAA,EAC3BZ,SAAS,CAACC,eAAe,CAAC,CAACiB;YAAY;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzB,OAAA;YAAKqB,SAAS,EAAC,gBAAgB;YAAAD,QAAA,EAC5BZ,SAAS,CAACC,eAAe,CAAC,CAACkB,aAAa,CAACC,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBAChE9B,OAAA;cAAoBM,OAAO,EAAEA,CAAA,KAAMS,uBAAuB,CAACc,YAAY,CAACb,SAAS,CAAE;cAAAI,QAAA,EAChFS,YAAY,CAACE;YAAU,GADbD,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,GACJ;MAAI,gBACR;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAACpB,EAAA,CAtEQF,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAwEb,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}